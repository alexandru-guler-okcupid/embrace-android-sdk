<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:ModuleInitBootstrapper.kt$ModuleInitBootstrapper$@JvmOverloads fun init( context: Context, appFramework: AppFramework, sdkStartTimeMs: Long, customAppId: String? = null, configServiceProvider: (framework: AppFramework) -&gt; ConfigService? = { null }, versionChecker: VersionChecker = BuildVersionChecker, ): Boolean</ID>
    <ID>LongParameterList:PayloadModuleSupplier.kt$( initModule: InitModule, coreModule: CoreModule, workerThreadModule: WorkerThreadModule, systemServiceModule: SystemServiceModule, androidServicesModule: AndroidServicesModule, essentialServiceModule: EssentialServiceModule, configModule: ConfigModule, nativeCoreModuleProvider: Provider&lt;NativeCoreModule?&gt;, nativeFeatureModuleProvider: Provider&lt;NativeFeatureModule?&gt;, otelModule: OpenTelemetryModule, anrModule: AnrModule, )</ID>
    <ID>LongParameterList:SessionOrchestrationModuleSupplier.kt$( initModule: InitModule, openTelemetryModule: OpenTelemetryModule, androidServicesModule: AndroidServicesModule, essentialServiceModule: EssentialServiceModule, configModule: ConfigModule, deliveryModule: DeliveryModule, workerThreadModule: WorkerThreadModule, dataSourceModule: DataSourceModule, payloadSourceModule: PayloadSourceModule, dataCaptureServiceModule: DataCaptureServiceModule, momentsModule: MomentsModule, logModule: LogModule )</ID>
    <ID>MaxLineLength:FakeModuleInitBootstrapper.kt$sessionOrchestrationModuleSupplier: SessionOrchestrationModuleSupplier = { _, _, _, _, _, _, _, _, _, _, _, _ -&gt; FakeSessionOrchestrationModule() }</ID>
    <ID>MaximumLineLength:FakeModuleInitBootstrapper.kt$ </ID>
  </CurrentIssues>
</SmellBaseline>
