public final class io/embrace/android/embracesdk/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public static final field VERSION_CODE Ljava/lang/String;
	public static final field VERSION_NAME Ljava/lang/String;
	public fun <init> ()V
}

public final class io/embrace/android/embracesdk/Embrace : io/embrace/android/embracesdk/internal/api/SdkApi {
	public fun addBreadcrumb (Ljava/lang/String;)V
	public fun addLogRecordExporter (Lio/opentelemetry/sdk/logs/export/LogRecordExporter;)V
	public fun addSessionProperty (Ljava/lang/String;Ljava/lang/String;Z)Z
	public fun addSpanExporter (Lio/opentelemetry/sdk/trace/export/SpanExporter;)V
	public fun addUserPersona (Ljava/lang/String;)V
	public fun clearAllUserPersonas ()V
	public fun clearUserAsPayer ()V
	public fun clearUserEmail ()V
	public fun clearUserIdentifier ()V
	public fun clearUserPersona (Ljava/lang/String;)V
	public fun clearUsername ()V
	public fun createSpan (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public fun createSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public fun endAppStartup ()V
	public fun endAppStartup (Ljava/util/Map;)V
	public fun endMoment (Ljava/lang/String;)V
	public fun endMoment (Ljava/lang/String;Ljava/lang/String;)V
	public fun endMoment (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public fun endMoment (Ljava/lang/String;Ljava/util/Map;)V
	public fun endSession ()V
	public fun endSession (Z)V
	public fun endView (Ljava/lang/String;)Z
	public fun generateW3cTraceparent ()Ljava/lang/String;
	public fun getCurrentSessionId ()Ljava/lang/String;
	public fun getDeviceId ()Ljava/lang/String;
	public fun getFlutterInternalInterface ()Lio/embrace/android/embracesdk/FlutterInternalInterface;
	public static fun getInstance ()Lio/embrace/android/embracesdk/Embrace;
	public fun getInternalInterface ()Lio/embrace/android/embracesdk/internal/EmbraceInternalInterface;
	public fun getLastRunEndState ()Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
	public fun getOpenTelemetry ()Lio/opentelemetry/api/OpenTelemetry;
	public fun getReactNativeInternalInterface ()Lio/embrace/android/embracesdk/ReactNativeInternalInterface;
	public fun getSessionProperties ()Ljava/util/Map;
	public fun getSpan (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public fun getTraceIdHeader ()Ljava/lang/String;
	public fun getUnityInternalInterface ()Lio/embrace/android/embracesdk/UnityInternalInterface;
	public fun isStarted ()Z
	public fun isTracingAvailable ()Z
	public fun logCustomStacktrace ([Ljava/lang/StackTraceElement;)V
	public fun logCustomStacktrace ([Ljava/lang/StackTraceElement;Lio/embrace/android/embracesdk/Severity;)V
	public fun logCustomStacktrace ([Ljava/lang/StackTraceElement;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;)V
	public fun logCustomStacktrace ([Ljava/lang/StackTraceElement;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;Ljava/lang/String;)V
	public fun logError (Ljava/lang/String;)V
	public fun logException (Ljava/lang/Throwable;)V
	public fun logException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/Severity;)V
	public fun logException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;)V
	public fun logException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;Ljava/lang/String;)V
	public fun logInfo (Ljava/lang/String;)V
	public fun logMessage (Ljava/lang/String;Lio/embrace/android/embracesdk/Severity;)V
	public fun logMessage (Ljava/lang/String;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;)V
	public fun logPushNotification (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public fun logWarning (Ljava/lang/String;)V
	public fun logWebView (Ljava/lang/String;)V
	public fun recordCompletedSpan (Ljava/lang/String;JJ)Z
	public fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;)Z
	public fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/util/Map;Ljava/util/List;)Z
	public fun recordCompletedSpan (Ljava/lang/String;JJLjava/util/Map;Ljava/util/List;)Z
	public fun recordNetworkRequest (Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;)V
	public fun recordSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun recordSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun recordSpan (Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun recordSpan (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun removeSessionProperty (Ljava/lang/String;)Z
	public fun setAppId (Ljava/lang/String;)Z
	public fun setUserAsPayer ()V
	public fun setUserEmail (Ljava/lang/String;)V
	public fun setUserIdentifier (Ljava/lang/String;)V
	public fun setUsername (Ljava/lang/String;)V
	public fun start (Landroid/content/Context;)V
	public fun start (Landroid/content/Context;Lio/embrace/android/embracesdk/Embrace$AppFramework;)V
	public fun start (Landroid/content/Context;Z)V
	public fun start (Landroid/content/Context;ZLio/embrace/android/embracesdk/Embrace$AppFramework;)V
	public fun startMoment (Ljava/lang/String;)V
	public fun startMoment (Ljava/lang/String;Ljava/lang/String;)V
	public fun startMoment (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public fun startSpan (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public fun startSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public fun startSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/lang/Long;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public fun startView (Ljava/lang/String;)Z
	public fun trackWebViewPerformance (Ljava/lang/String;Landroid/webkit/ConsoleMessage;)V
	public fun trackWebViewPerformance (Ljava/lang/String;Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/Embrace$AppFramework : java/lang/Enum {
	public static final field FLUTTER Lio/embrace/android/embracesdk/Embrace$AppFramework;
	public static final field NATIVE Lio/embrace/android/embracesdk/Embrace$AppFramework;
	public static final field REACT_NATIVE Lio/embrace/android/embracesdk/Embrace$AppFramework;
	public static final field UNITY Lio/embrace/android/embracesdk/Embrace$AppFramework;
	public fun getValue ()I
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/Embrace$AppFramework;
	public static fun values ()[Lio/embrace/android/embracesdk/Embrace$AppFramework;
}

public final class io/embrace/android/embracesdk/Embrace$LastRunEndState : java/lang/Enum {
	public static final field CLEAN_EXIT Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
	public static final field CRASH Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
	public static final field INVALID Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
	public fun getValue ()I
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
	public static fun values ()[Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
}

public final class io/embrace/android/embracesdk/EmbraceSamples {
	public static final field INSTANCE Lio/embrace/android/embracesdk/EmbraceSamples;
	public static final fun causeNdkIllegalInstruction ()V
	public static final fun throwJvmException ()V
	public static final fun triggerAnr ()V
	public static final fun triggerLongAnr ()V
	public static final fun verifyIntegration ()V
}

public abstract interface class io/embrace/android/embracesdk/FlutterInternalInterface : io/embrace/android/embracesdk/internal/EmbraceInternalInterface {
	public abstract fun logHandledDartException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun logUnhandledDartException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setDartVersion (Ljava/lang/String;)V
	public abstract fun setEmbraceFlutterSdkVersion (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/LogExceptionType : java/lang/Enum {
	public static final field HANDLED Lio/embrace/android/embracesdk/LogExceptionType;
	public static final field NONE Lio/embrace/android/embracesdk/LogExceptionType;
	public static final field UNHANDLED Lio/embrace/android/embracesdk/LogExceptionType;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/LogExceptionType;
	public static fun values ()[Lio/embrace/android/embracesdk/LogExceptionType;
}

public final class io/embrace/android/embracesdk/LogType : java/lang/Enum {
	public static final field ERROR Lio/embrace/android/embracesdk/LogType;
	public static final field INFO Lio/embrace/android/embracesdk/LogType;
	public static final field WARNING Lio/embrace/android/embracesdk/LogType;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/LogType;
	public static fun values ()[Lio/embrace/android/embracesdk/LogType;
}

public abstract interface class io/embrace/android/embracesdk/ReactNativeInternalInterface : io/embrace/android/embracesdk/internal/EmbraceInternalInterface {
	public abstract fun logHandledJsException (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
	public abstract fun logRnAction (Ljava/lang/String;JJLjava/util/Map;ILjava/lang/String;)V
	public abstract fun logRnView (Ljava/lang/String;)V
	public abstract fun logUnhandledJsException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setCacheableJavaScriptBundleUrl (Landroid/content/Context;Ljava/lang/String;Z)V
	public abstract fun setJavaScriptBundleUrl (Landroid/content/Context;Ljava/lang/String;)V
	public abstract fun setJavaScriptPatchNumber (Ljava/lang/String;)V
	public abstract fun setReactNativeSdkVersion (Ljava/lang/String;)V
	public abstract fun setReactNativeVersionNumber (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/Severity : java/lang/Enum {
	public static final field ERROR Lio/embrace/android/embracesdk/Severity;
	public static final field INFO Lio/embrace/android/embracesdk/Severity;
	public static final field WARNING Lio/embrace/android/embracesdk/Severity;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/Severity;
	public static fun values ()[Lio/embrace/android/embracesdk/Severity;
}

public abstract interface class io/embrace/android/embracesdk/UnityInternalInterface : io/embrace/android/embracesdk/internal/EmbraceInternalInterface {
	public abstract fun installUnityThreadSampler ()V
	public abstract fun logHandledUnityException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun logUnhandledUnityException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun recordCompletedNetworkRequest (Ljava/lang/String;Ljava/lang/String;JJJJILjava/lang/String;)V
	public abstract fun recordIncompleteNetworkRequest (Ljava/lang/String;Ljava/lang/String;JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun setUnityMetaData (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/ViewSwazzledHooks {
}

public final class io/embrace/android/embracesdk/ViewSwazzledHooks$OnClickListener {
	public static fun _preOnClick (Landroid/view/View$OnClickListener;Landroid/view/View;)V
}

public final class io/embrace/android/embracesdk/ViewSwazzledHooks$OnLongClickListener {
	public static fun _preOnLongClick (Landroid/view/View$OnLongClickListener;Landroid/view/View;)V
}

public final class io/embrace/android/embracesdk/WebViewChromeClientSwazzledHooks {
	public static fun _preOnConsoleMessage (Landroid/webkit/ConsoleMessage;)V
}

public final class io/embrace/android/embracesdk/WebViewClientSwazzledHooks {
	public static fun _preOnPageStarted (Landroid/webkit/WebView;Ljava/lang/String;Landroid/graphics/Bitmap;)V
}

public abstract interface annotation class io/embrace/android/embracesdk/annotation/BetaApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class io/embrace/android/embracesdk/annotation/InternalApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class io/embrace/android/embracesdk/annotation/StartupActivity : java/lang/annotation/Annotation {
}

public abstract interface class io/embrace/android/embracesdk/internal/EmbraceInternalInterface : io/embrace/android/embracesdk/internal/InternalTracingApi {
	public abstract fun getSdkCurrentTime ()J
	public abstract fun isAnrCaptureEnabled ()Z
	public abstract fun isInternalNetworkCaptureDisabled ()Z
	public abstract fun isNdkEnabled ()Z
	public abstract fun isNetworkSpanForwardingEnabled ()Z
	public abstract fun logComposeTap (Lkotlin/Pair;Ljava/lang/String;)V
	public abstract fun logError (Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;Z)V
	public abstract fun logHandledException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/LogType;Ljava/util/Map;[Ljava/lang/StackTraceElement;)V
	public abstract fun logInfo (Ljava/lang/String;Ljava/util/Map;)V
	public abstract fun logInternalError (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun logInternalError (Ljava/lang/Throwable;)V
	public abstract fun logWarning (Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)V
	public abstract fun recordCompletedNetworkRequest (Ljava/lang/String;Ljava/lang/String;JJJJILjava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)V
	public abstract fun recordIncompleteNetworkRequest (Ljava/lang/String;Ljava/lang/String;JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)V
	public abstract fun recordIncompleteNetworkRequest (Ljava/lang/String;Ljava/lang/String;JJLjava/lang/Throwable;Ljava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)V
	public abstract fun recordNetworkRequest (Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;)V
	public abstract fun setProcessStartedByNotification ()V
	public abstract fun shouldCaptureNetworkBody (Ljava/lang/String;Ljava/lang/String;)Z
	public abstract fun stopSdk ()V
}

public abstract interface class io/embrace/android/embracesdk/internal/InternalTracingApi {
	public abstract fun addSpanAttribute (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
	public abstract fun addSpanEvent (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/util/Map;)Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)Z
	public abstract fun recordSpan (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun startSpan (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/String;
	public abstract fun stopSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/ErrorCode;Ljava/lang/Long;)Z
}

public final class io/embrace/android/embracesdk/internal/InternalTracingApi$DefaultImpls {
	public static synthetic fun addSpanEvent$default (Lio/embrace/android/embracesdk/internal/InternalTracingApi;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;Ljava/util/Map;ILjava/lang/Object;)Z
	public static synthetic fun recordCompletedSpan$default (Lio/embrace/android/embracesdk/internal/InternalTracingApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;ILjava/lang/Object;)Z
	public static synthetic fun recordSpan$default (Lio/embrace/android/embracesdk/internal/InternalTracingApi;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun startSpan$default (Lio/embrace/android/embracesdk/internal/InternalTracingApi;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Long;ILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun stopSpan$default (Lio/embrace/android/embracesdk/internal/InternalTracingApi;Ljava/lang/String;Lio/embrace/android/embracesdk/spans/ErrorCode;Ljava/lang/Long;ILjava/lang/Object;)Z
}

public abstract interface class io/embrace/android/embracesdk/internal/api/BreadcrumbApi {
	public abstract fun addBreadcrumb (Ljava/lang/String;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/api/EmbraceAndroidApi {
	public abstract fun endView (Ljava/lang/String;)Z
	public abstract fun start (Landroid/content/Context;)V
	public abstract fun start (Landroid/content/Context;Lio/embrace/android/embracesdk/Embrace$AppFramework;)V
	public abstract fun start (Landroid/content/Context;Z)V
	public abstract fun start (Landroid/content/Context;ZLio/embrace/android/embracesdk/Embrace$AppFramework;)V
	public abstract fun startView (Ljava/lang/String;)Z
}

public abstract interface class io/embrace/android/embracesdk/internal/api/InternalInterfaceApi {
	public abstract fun getFlutterInternalInterface ()Lio/embrace/android/embracesdk/FlutterInternalInterface;
	public abstract fun getInternalInterface ()Lio/embrace/android/embracesdk/internal/EmbraceInternalInterface;
	public abstract fun getReactNativeInternalInterface ()Lio/embrace/android/embracesdk/ReactNativeInternalInterface;
	public abstract fun getUnityInternalInterface ()Lio/embrace/android/embracesdk/UnityInternalInterface;
}

public abstract interface class io/embrace/android/embracesdk/internal/api/InternalWebViewApi {
	public abstract fun logWebView (Ljava/lang/String;)V
	public abstract fun trackWebViewPerformance (Ljava/lang/String;Landroid/webkit/ConsoleMessage;)V
	public abstract fun trackWebViewPerformance (Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/api/LogsApi {
	public abstract fun logCustomStacktrace ([Ljava/lang/StackTraceElement;)V
	public abstract fun logCustomStacktrace ([Ljava/lang/StackTraceElement;Lio/embrace/android/embracesdk/Severity;)V
	public abstract fun logCustomStacktrace ([Ljava/lang/StackTraceElement;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;)V
	public abstract fun logCustomStacktrace ([Ljava/lang/StackTraceElement;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;Ljava/lang/String;)V
	public abstract fun logError (Ljava/lang/String;)V
	public abstract fun logException (Ljava/lang/Throwable;)V
	public abstract fun logException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/Severity;)V
	public abstract fun logException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;)V
	public abstract fun logException (Ljava/lang/Throwable;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;Ljava/lang/String;)V
	public abstract fun logInfo (Ljava/lang/String;)V
	public abstract fun logMessage (Ljava/lang/String;Lio/embrace/android/embracesdk/Severity;)V
	public abstract fun logMessage (Ljava/lang/String;Lio/embrace/android/embracesdk/Severity;Ljava/util/Map;)V
	public abstract fun logPushNotification (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)V
	public abstract fun logWarning (Ljava/lang/String;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/api/MomentsApi {
	public abstract fun endAppStartup ()V
	public abstract fun endAppStartup (Ljava/util/Map;)V
	public abstract fun endMoment (Ljava/lang/String;)V
	public abstract fun endMoment (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun endMoment (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
	public abstract fun endMoment (Ljava/lang/String;Ljava/util/Map;)V
	public abstract fun startMoment (Ljava/lang/String;)V
	public abstract fun startMoment (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun startMoment (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/api/NetworkRequestApi {
	public abstract fun generateW3cTraceparent ()Ljava/lang/String;
	public abstract fun getTraceIdHeader ()Ljava/lang/String;
	public abstract fun recordNetworkRequest (Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/api/OTelApi {
	public abstract fun addLogRecordExporter (Lio/opentelemetry/sdk/logs/export/LogRecordExporter;)V
	public abstract fun addSpanExporter (Lio/opentelemetry/sdk/trace/export/SpanExporter;)V
	public abstract fun getOpenTelemetry ()Lio/opentelemetry/api/OpenTelemetry;
}

public abstract interface class io/embrace/android/embracesdk/internal/api/SdkApi : io/embrace/android/embracesdk/internal/api/BreadcrumbApi, io/embrace/android/embracesdk/internal/api/EmbraceAndroidApi, io/embrace/android/embracesdk/internal/api/InternalInterfaceApi, io/embrace/android/embracesdk/internal/api/InternalWebViewApi, io/embrace/android/embracesdk/internal/api/LogsApi, io/embrace/android/embracesdk/internal/api/MomentsApi, io/embrace/android/embracesdk/internal/api/NetworkRequestApi, io/embrace/android/embracesdk/internal/api/OTelApi, io/embrace/android/embracesdk/internal/api/SdkStateApi, io/embrace/android/embracesdk/internal/api/SessionApi, io/embrace/android/embracesdk/internal/api/UserApi, io/embrace/android/embracesdk/spans/TracingApi {
}

public final class io/embrace/android/embracesdk/internal/api/SdkApi$DefaultImpls {
	public static fun createSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;JJ)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;JJLjava/util/Map;Ljava/util/List;)Z
	public static fun recordSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun recordSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun recordSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun startSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public static fun startSpan (Lio/embrace/android/embracesdk/internal/api/SdkApi;Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
}

public abstract interface class io/embrace/android/embracesdk/internal/api/SdkStateApi {
	public abstract fun getCurrentSessionId ()Ljava/lang/String;
	public abstract fun getDeviceId ()Ljava/lang/String;
	public abstract fun getLastRunEndState ()Lio/embrace/android/embracesdk/Embrace$LastRunEndState;
	public abstract fun isStarted ()Z
	public abstract fun setAppId (Ljava/lang/String;)Z
}

public abstract interface class io/embrace/android/embracesdk/internal/api/SessionApi {
	public abstract fun addSessionProperty (Ljava/lang/String;Ljava/lang/String;Z)Z
	public abstract fun endSession ()V
	public abstract fun endSession (Z)V
	public abstract fun getSessionProperties ()Ljava/util/Map;
	public abstract fun removeSessionProperty (Ljava/lang/String;)Z
}

public abstract interface class io/embrace/android/embracesdk/internal/api/UserApi {
	public abstract fun addUserPersona (Ljava/lang/String;)V
	public abstract fun clearAllUserPersonas ()V
	public abstract fun clearUserAsPayer ()V
	public abstract fun clearUserEmail ()V
	public abstract fun clearUserIdentifier ()V
	public abstract fun clearUserPersona (Ljava/lang/String;)V
	public abstract fun clearUsername ()V
	public abstract fun setUserAsPayer ()V
	public abstract fun setUserEmail (Ljava/lang/String;)V
	public abstract fun setUserIdentifier (Ljava/lang/String;)V
	public abstract fun setUsername (Ljava/lang/String;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/arch/EmbraceFeatureRegistry {
	public abstract fun add (Lio/embrace/android/embracesdk/internal/arch/datasource/DataSourceState;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/arch/datasource/DataSource {
	public abstract fun captureData (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Z
	public abstract fun disableDataCapture ()V
	public abstract fun enableDataCapture ()V
	public abstract fun resetDataCaptureLimits ()V
}

public abstract class io/embrace/android/embracesdk/internal/arch/datasource/DataSourceImpl : io/embrace/android/embracesdk/internal/arch/datasource/DataSource {
	public fun <init> (Ljava/lang/Object;Lio/embrace/android/embracesdk/internal/logging/EmbLogger;Lio/embrace/android/embracesdk/internal/arch/limits/LimitStrategy;)V
	public fun captureData (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Z
	protected final fun captureDataImpl (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;Z)Z
	public static synthetic fun captureDataImpl$default (Lio/embrace/android/embracesdk/internal/arch/datasource/DataSourceImpl;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;ZILjava/lang/Object;)Z
	public fun disableDataCapture ()V
	public fun enableDataCapture ()V
	public fun resetDataCaptureLimits ()V
}

public final class io/embrace/android/embracesdk/internal/arch/datasource/DataSourceState {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/embrace/android/embracesdk/internal/arch/SessionType;Z)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/embrace/android/embracesdk/internal/arch/SessionType;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCurrentSessionType ()Lio/embrace/android/embracesdk/internal/arch/SessionType;
	public final fun getDataSource ()Lio/embrace/android/embracesdk/internal/arch/datasource/DataSource;
	public final fun onConfigChange ()V
	public final fun setCurrentSessionType (Lio/embrace/android/embracesdk/internal/arch/SessionType;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/arch/destination/LogWriter {
	public abstract fun addLog (Lio/embrace/android/embracesdk/internal/arch/schema/SchemaType;Lio/embrace/android/embracesdk/Severity;Ljava/lang/String;Z)V
}

public final class io/embrace/android/embracesdk/internal/arch/destination/LogWriter$DefaultImpls {
	public static synthetic fun addLog$default (Lio/embrace/android/embracesdk/internal/arch/destination/LogWriter;Lio/embrace/android/embracesdk/internal/arch/schema/SchemaType;Lio/embrace/android/embracesdk/Severity;Ljava/lang/String;ZILjava/lang/Object;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/arch/destination/SessionSpanWriter {
	public abstract fun addCustomAttribute (Lio/embrace/android/embracesdk/internal/arch/destination/SpanAttributeData;)Z
	public abstract fun addEvent (Lio/embrace/android/embracesdk/internal/arch/schema/SchemaType;J)Z
	public abstract fun removeCustomAttribute (Ljava/lang/String;)Z
	public abstract fun removeEvents (Lio/embrace/android/embracesdk/internal/arch/schema/EmbType;)V
}

public final class io/embrace/android/embracesdk/internal/arch/destination/SpanAttributeData {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/embrace/android/embracesdk/internal/arch/destination/SpanAttributeData;
	public static synthetic fun copy$default (Lio/embrace/android/embracesdk/internal/arch/destination/SpanAttributeData;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/embrace/android/embracesdk/internal/arch/destination/SpanAttributeData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKey ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/embrace/android/embracesdk/internal/arch/schema/EmbType : io/embrace/android/embracesdk/internal/arch/schema/TelemetryType {
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getKey ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
	public fun getSendImmediately ()Z
	public fun getValue ()Ljava/lang/String;
	public fun toEmbraceKeyValuePair ()Lkotlin/Pair;
	public fun toPayload ()Lio/embrace/android/embracesdk/internal/payload/Attribute;
}

public abstract class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance : io/embrace/android/embracesdk/internal/arch/schema/EmbType {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$Default : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$Default;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$MemoryWarning : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$MemoryWarning;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$NativeThreadBlockage : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$NativeThreadBlockage;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$NativeThreadBlockageSample : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$NativeThreadBlockageSample;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$Network : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$Network;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$ThermalState : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$ThermalState;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$ThreadBlockage : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$ThreadBlockage;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$ThreadBlockageSample : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Performance$ThreadBlockageSample;
}

public abstract class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System : io/embrace/android/embracesdk/internal/arch/schema/EmbType {
	public synthetic fun <init> (Ljava/lang/String;ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getSendImmediately ()Z
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Breadcrumb : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Breadcrumb;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Crash : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Crash;
	public final fun getEmbAndroidCrashExceptionCause ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Exception : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Exception;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Exit : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Exit;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$FlutterException : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$FlutterException;
	public final fun getEmbFlutterExceptionContext ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
	public final fun getEmbFlutterExceptionLibrary ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$InternalError : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$InternalError;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Log : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Log;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$LowPower : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$LowPower;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$NativeCrash : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$NativeCrash;
	public final fun getEmbNativeCrashErrors ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
	public final fun getEmbNativeCrashException ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
	public final fun getEmbNativeCrashSymbols ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
	public final fun getEmbNativeCrashUnwindError ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$NetworkCapturedRequest : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$NetworkCapturedRequest;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$NetworkStatus : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$NetworkStatus;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$PushNotification : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$PushNotification;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$ReactNativeAction : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$ReactNativeAction;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$ReactNativeCrash : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$ReactNativeCrash;
	public final fun getEmbAndroidReactNativeCrashJsException ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Sigquit : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$Sigquit;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$System$WebViewInfo : io/embrace/android/embracesdk/internal/arch/schema/EmbType$System {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$System$WebViewInfo;
}

public abstract class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux : io/embrace/android/embracesdk/internal/arch/schema/EmbType {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$Session : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$Session;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$Tap : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$Tap;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$View : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$View;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$WebView : io/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/EmbType$Ux$WebView;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey : io/embrace/android/embracesdk/internal/arch/schema/EmbraceAttribute {
	public fun <init> (Ljava/lang/String;Lio/opentelemetry/api/common/AttributeKey;ZZ)V
	public synthetic fun <init> (Ljava/lang/String;Lio/opentelemetry/api/common/AttributeKey;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAttributeKey ()Lio/opentelemetry/api/common/AttributeKey;
	public fun getId ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
}

public abstract interface class io/embrace/android/embracesdk/internal/arch/schema/FixedAttribute {
	public abstract fun getKey ()Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;
	public abstract fun getValue ()Ljava/lang/String;
	public abstract fun toEmbraceKeyValuePair ()Lkotlin/Pair;
	public abstract fun toPayload ()Lio/embrace/android/embracesdk/internal/payload/Attribute;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/FixedAttribute$DefaultImpls {
	public static fun toEmbraceKeyValuePair (Lio/embrace/android/embracesdk/internal/arch/schema/FixedAttribute;)Lkotlin/Pair;
	public static fun toPayload (Lio/embrace/android/embracesdk/internal/arch/schema/FixedAttribute;)Lio/embrace/android/embracesdk/internal/payload/Attribute;
}

public abstract class io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public synthetic fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryType;Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun attributes ()Ljava/util/Map;
	public final fun getFixedObjectName ()Ljava/lang/String;
	protected abstract fun getSchemaAttributes ()Ljava/util/Map;
	public final fun getTelemetryType ()Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryType;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$Breadcrumb : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$Crash : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$Exception : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$FlutterException : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$InternalError : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/Throwable;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$Log : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$LowPower : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/SchemaType$LowPower;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$MemoryWarning : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> ()V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$NativeCrash : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$NativeThreadBlockage : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (ILjava/lang/String;ILjava/lang/String;JLjava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$NativeThreadBlockageSample : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (IJLjava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$NetworkRequest : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$PushNotification : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$ReactNativeAction : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$ReactNativeCrash : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$Sigquit : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public static final field INSTANCE Lio/embrace/android/embracesdk/internal/arch/schema/SchemaType$Sigquit;
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$Tap : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$ThermalState : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (I)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$ThreadBlockage : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (IJI)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$ThreadBlockageSample : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (JILjava/lang/String;ILjava/lang/Thread$State;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$View : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$WebViewInfo : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/SchemaType$WebViewUrl : io/embrace/android/embracesdk/internal/arch/schema/SchemaType {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/arch/schema/TelemetryAttributes {
	public fun <init> (Lio/embrace/android/embracesdk/internal/config/ConfigService;Lkotlin/jvm/functions/Function0;Ljava/util/Map;)V
	public synthetic fun <init> (Lio/embrace/android/embracesdk/internal/config/ConfigService;Lkotlin/jvm/functions/Function0;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAttribute (Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;)Ljava/lang/String;
	public final fun getAttribute (Lio/opentelemetry/api/common/AttributeKey;)Ljava/lang/String;
	public final fun setAttribute (Lio/embrace/android/embracesdk/internal/arch/schema/EmbraceAttributeKey;Ljava/lang/String;)V
	public final fun setAttribute (Lio/opentelemetry/api/common/AttributeKey;Ljava/lang/String;)V
	public final fun snapshot ()Ljava/util/Map;
}

public abstract interface class io/embrace/android/embracesdk/internal/arch/schema/TelemetryType : io/embrace/android/embracesdk/internal/arch/schema/FixedAttribute {
	public abstract fun getSendImmediately ()Z
}

public final class io/embrace/android/embracesdk/internal/arch/schema/TelemetryType$DefaultImpls {
	public static fun toEmbraceKeyValuePair (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryType;)Lkotlin/Pair;
	public static fun toPayload (Lio/embrace/android/embracesdk/internal/arch/schema/TelemetryType;)Lio/embrace/android/embracesdk/internal/payload/Attribute;
}

public abstract interface class io/embrace/android/embracesdk/internal/clock/Clock {
	public abstract fun now ()J
	public abstract fun nowInNanos ()J
}

public final class io/embrace/android/embracesdk/internal/clock/Clock$DefaultImpls {
	public static fun nowInNanos (Lio/embrace/android/embracesdk/internal/clock/Clock;)J
}

public abstract interface class io/embrace/android/embracesdk/internal/config/ConfigService : java/io/Closeable {
	public abstract fun addListener (Lkotlin/jvm/functions/Function0;)V
	public abstract fun getAnrBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/AnrBehavior;
	public abstract fun getAppExitInfoBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior;
	public abstract fun getAppFramework ()Lio/embrace/android/embracesdk/internal/payload/AppFramework;
	public abstract fun getAutoDataCaptureBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/AutoDataCaptureBehavior;
	public abstract fun getBackgroundActivityBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/BackgroundActivityBehavior;
	public abstract fun getBreadcrumbBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/BreadcrumbBehavior;
	public abstract fun getDataCaptureEventBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/DataCaptureEventBehavior;
	public abstract fun getLogMessageBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/LogMessageBehavior;
	public abstract fun getNetworkBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/NetworkBehavior;
	public abstract fun getNetworkSpanForwardingBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/NetworkSpanForwardingBehavior;
	public abstract fun getSdkEndpointBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/SdkEndpointBehavior;
	public abstract fun getSdkModeBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/SdkModeBehavior;
	public abstract fun getSessionBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/SessionBehavior;
	public abstract fun getStartupBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/StartupBehavior;
	public abstract fun getWebViewVitalsBehavior ()Lio/embrace/android/embracesdk/internal/config/behavior/WebViewVitalsBehavior;
	public abstract fun hasValidRemoteConfig ()Z
	public abstract fun isAppExitInfoCaptureEnabled ()Z
	public abstract fun isBackgroundActivityCaptureEnabled ()Z
	public abstract fun isSdkDisabled ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/AnrBehavior {
	public abstract fun getAllowPatternList ()Ljava/util/List;
	public abstract fun getAnrProcessErrorsDelayMs ()J
	public abstract fun getAnrProcessErrorsIntervalMs ()J
	public abstract fun getAnrProcessErrorsSchedulerExtraTimeAllowanceMs ()J
	public abstract fun getBlockPatternList ()Ljava/util/List;
	public abstract fun getMaxAnrIntervalsPerSession ()I
	public abstract fun getMaxStacktracesPerInterval ()I
	public abstract fun getMinDuration ()I
	public abstract fun getMinThreadPriority ()I
	public abstract fun getMonitorThreadPriority ()I
	public abstract fun getNativeThreadAnrSamplingAllowlist ()Ljava/util/List;
	public abstract fun getNativeThreadAnrSamplingFactor ()I
	public abstract fun getNativeThreadAnrSamplingIntervalMs ()J
	public abstract fun getNativeThreadAnrSamplingUnwinder ()Lio/embrace/android/embracesdk/internal/config/remote/Unwinder;
	public abstract fun getSamplingIntervalMs ()J
	public abstract fun getStacktraceFrameLimit ()I
	public abstract fun getStrictModeViolationLimit ()I
	public abstract fun isAnrCaptureEnabled ()Z
	public abstract fun isAnrProcessErrorsCaptureEnabled ()Z
	public abstract fun isBgAnrCaptureEnabled ()Z
	public abstract fun isGoogleAnrCaptureEnabled ()Z
	public abstract fun isIdleHandlerEnabled ()Z
	public abstract fun isNativeThreadAnrSamplingAllowlistIgnored ()Z
	public abstract fun isNativeThreadAnrSamplingEnabled ()Z
	public abstract fun isNativeThreadAnrSamplingOffsetEnabled ()Z
	public abstract fun isStrictModeListenerEnabled ()Z
	public abstract fun shouldCaptureMainThreadOnly ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior {
	public abstract fun appExitInfoMaxNum ()I
	public abstract fun getTraceMaxLimit ()I
	public abstract fun isEnabled ()Z
}

public abstract class io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getResult ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult$Success : io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult$TooLarge : io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult$TraceException : io/embrace/android/embracesdk/internal/config/behavior/AppExitInfoBehavior$CollectTracesResult {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/AutoDataCaptureBehavior {
	public abstract fun isAnrServiceEnabled ()Z
	public abstract fun isComposeOnClickEnabled ()Z
	public abstract fun isDiskUsageReportingEnabled ()Z
	public abstract fun isMemoryServiceEnabled ()Z
	public abstract fun isNdkEnabled ()Z
	public abstract fun isNetworkConnectivityServiceEnabled ()Z
	public abstract fun isPowerSaveModeServiceEnabled ()Z
	public abstract fun isSigHandlerDetectionEnabled ()Z
	public abstract fun isThermalStatusCaptureEnabled ()Z
	public abstract fun isUncaughtExceptionHandlerEnabled ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/BackgroundActivityBehavior {
	public abstract fun getManualBackgroundActivityLimit ()I
	public abstract fun getMaxCachedActivities ()I
	public abstract fun getMinBackgroundActivityDuration ()J
	public abstract fun isEnabled ()Z
}

public final class io/embrace/android/embracesdk/internal/config/behavior/BehaviorThresholdCheck {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun getNormalizedDeviceId ()F
	public final fun getNormalizedLargeDeviceId ()F
	public final fun isBehaviorEnabled (F)Z
	public final fun isBehaviorEnabled (Ljava/lang/Float;)Ljava/lang/Boolean;
	public final fun isBehaviorEnabled (Ljava/lang/Integer;)Ljava/lang/Boolean;
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/BreadcrumbBehavior {
	public abstract fun getCustomBreadcrumbLimit ()I
	public abstract fun getFragmentBreadcrumbLimit ()I
	public abstract fun getTapBreadcrumbLimit ()I
	public abstract fun getViewBreadcrumbLimit ()I
	public abstract fun getWebViewBreadcrumbLimit ()I
	public abstract fun isAutomaticActivityCaptureEnabled ()Z
	public abstract fun isCaptureFcmPiiDataEnabled ()Z
	public abstract fun isQueryParamCaptureEnabled ()Z
	public abstract fun isTapCoordinateCaptureEnabled ()Z
	public abstract fun isWebViewBreadcrumbCaptureEnabled ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/DataCaptureEventBehavior {
	public abstract fun getEventLimits ()Ljava/util/Map;
	public abstract fun isEventEnabled (Ljava/lang/String;)Z
	public abstract fun isInternalExceptionCaptureEnabled ()Z
	public abstract fun isLogMessageEnabled (Ljava/lang/String;)Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/LogMessageBehavior {
	public abstract fun getErrorLogLimit ()I
	public abstract fun getInfoLogLimit ()I
	public abstract fun getLogMessageMaximumAllowedLength ()I
	public abstract fun getWarnLogLimit ()I
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/NetworkBehavior {
	public abstract fun getCapturePublicKey ()Ljava/lang/String;
	public abstract fun getNetworkCallLimitsPerDomainSuffix ()Ljava/util/Map;
	public abstract fun getNetworkCaptureLimit ()I
	public abstract fun getNetworkCaptureRules ()Ljava/util/Set;
	public abstract fun getTraceIdHeader ()Ljava/lang/String;
	public abstract fun isCaptureBodyEncryptionEnabled ()Z
	public abstract fun isNativeNetworkingMonitoringEnabled ()Z
	public abstract fun isRequestContentLengthCaptureEnabled ()Z
	public abstract fun isUrlEnabled (Ljava/lang/String;)Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/NetworkSpanForwardingBehavior {
	public abstract fun isNetworkSpanForwardingEnabled ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/SdkEndpointBehavior {
	public abstract fun getConfig (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getData (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/SdkModeBehavior {
	public abstract fun getAppId ()Ljava/lang/String;
	public abstract fun isBetaFeaturesEnabled ()Z
	public abstract fun isSdkDisabled ()Z
	public abstract fun isServiceInitDeferred ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/SessionBehavior {
	public abstract fun getFullSessionEvents ()Ljava/util/Set;
	public abstract fun getMaxSessionProperties ()I
	public abstract fun getSessionComponents ()Ljava/util/Set;
	public abstract fun isGatingFeatureEnabled ()Z
	public abstract fun isSessionControlEnabled ()Z
	public abstract fun shouldGateInfoLog ()Z
	public abstract fun shouldGateLogProperties ()Z
	public abstract fun shouldGateMoment ()Z
	public abstract fun shouldGateSessionProperties ()Z
	public abstract fun shouldGateStartupMoment ()Z
	public abstract fun shouldGateWarnLog ()Z
	public abstract fun shouldSendFullForCrash ()Z
	public abstract fun shouldSendFullForErrorLog ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/StartupBehavior {
	public abstract fun isAutomaticEndEnabled ()Z
}

public abstract interface class io/embrace/android/embracesdk/internal/config/behavior/WebViewVitalsBehavior {
	public abstract fun getMaxWebViewVitals ()I
	public abstract fun isWebViewVitalsEnabled ()Z
}

public final class io/embrace/android/embracesdk/internal/config/remote/AllowedNdkSampleMethod {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getClz ()Ljava/lang/String;
	public final fun getMethod ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/config/remote/AllowedNdkSampleMethodJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Lio/embrace/android/embracesdk/internal/config/remote/AllowedNdkSampleMethod;
	public synthetic fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Lio/embrace/android/embracesdk/internal/config/remote/AllowedNdkSampleMethod;)V
	public synthetic fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfig {
	public fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;JJILjava/util/Set;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;JJILjava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/Long;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()J
	public final fun component6 ()J
	public final fun component7 ()I
	public final fun component8 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;JJILjava/util/Set;)Lio/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfig;
	public static synthetic fun copy$default (Lio/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfig;Ljava/lang/String;Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;JJILjava/util/Set;ILjava/lang/Object;)Lio/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDuration ()Ljava/lang/Long;
	public final fun getExpiresIn ()J
	public final fun getId ()Ljava/lang/String;
	public final fun getMaxCount ()I
	public final fun getMaxSize ()J
	public final fun getMethod ()Ljava/lang/String;
	public final fun getStatusCodes ()Ljava/util/Set;
	public final fun getUrlRegex ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfigJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Lio/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfig;
	public synthetic fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Lio/embrace/android/embracesdk/internal/config/remote/NetworkCaptureRuleRemoteConfig;)V
	public synthetic fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/config/remote/Unwinder : java/lang/Enum {
	public static final field LIBUNWIND Lio/embrace/android/embracesdk/internal/config/remote/Unwinder;
	public static final field LIBUNWINDSTACK Lio/embrace/android/embracesdk/internal/config/remote/Unwinder;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/internal/config/remote/Unwinder;
	public static fun values ()[Lio/embrace/android/embracesdk/internal/config/remote/Unwinder;
}

public class io/embrace/android/embracesdk/internal/network/http/EmbraceHttpPathOverride {
	protected static final field PATH_OVERRIDE Ljava/lang/String;
	public fun <init> ()V
	public static fun getURLString (Lio/embrace/android/embracesdk/internal/network/http/HttpPathOverrideRequest;)Ljava/lang/String;
	public static fun getURLString (Lio/embrace/android/embracesdk/internal/network/http/HttpPathOverrideRequest;Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class io/embrace/android/embracesdk/internal/network/http/HttpPathOverrideRequest {
	public abstract fun getHeaderByName (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getOverriddenURL (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getURLString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/network/http/NetworkCaptureData {
	public fun <init> (Ljava/util/Map;Ljava/lang/String;[BLjava/util/Map;[BLjava/lang/String;)V
	public synthetic fun <init> (Ljava/util/Map;Ljava/lang/String;[BLjava/util/Map;[BLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()[B
	public final fun component4 ()Ljava/util/Map;
	public final fun component5 ()[B
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/util/Map;Ljava/lang/String;[BLjava/util/Map;[BLjava/lang/String;)Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;
	public static synthetic fun copy$default (Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;Ljava/util/Map;Ljava/lang/String;[BLjava/util/Map;[BLjava/lang/String;ILjava/lang/Object;)Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCapturedRequestBody ()[B
	public final fun getCapturedResponseBody ()[B
	public final fun getDataCaptureErrorMessage ()Ljava/lang/String;
	public final fun getRequestBodySize ()I
	public final fun getRequestHeaders ()Ljava/util/Map;
	public final fun getRequestQueryParams ()Ljava/lang/String;
	public final fun getResponseBodySize ()I
	public final fun getResponseHeaders ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/payload/AppFramework : java/lang/Enum {
	public static final field FLUTTER Lio/embrace/android/embracesdk/internal/payload/AppFramework;
	public static final field NATIVE Lio/embrace/android/embracesdk/internal/payload/AppFramework;
	public static final field REACT_NATIVE Lio/embrace/android/embracesdk/internal/payload/AppFramework;
	public static final field UNITY Lio/embrace/android/embracesdk/internal/payload/AppFramework;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/internal/payload/AppFramework;
	public static fun values ()[Lio/embrace/android/embracesdk/internal/payload/AppFramework;
}

public final class io/embrace/android/embracesdk/internal/payload/Attribute {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/embrace/android/embracesdk/internal/payload/Attribute;
	public static synthetic fun copy$default (Lio/embrace/android/embracesdk/internal/payload/Attribute;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/embrace/android/embracesdk/internal/payload/Attribute;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getData ()Ljava/lang/String;
	public final fun getKey ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/internal/payload/AttributeJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Lio/embrace/android/embracesdk/internal/payload/Attribute;
	public synthetic fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Lio/embrace/android/embracesdk/internal/payload/Attribute;)V
	public synthetic fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/network/EmbraceNetworkRequest {
	public static fun fromCompletedRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJJJI)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromCompletedRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJJJILjava/lang/String;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromCompletedRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJJJILjava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromCompletedRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJJJILjava/lang/String;Ljava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromIncompleteRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJLjava/lang/String;Ljava/lang/String;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromIncompleteRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromIncompleteRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public static fun fromIncompleteRequest (Ljava/lang/String;Lio/embrace/android/embracesdk/network/http/HttpMethod;JJLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;)Lio/embrace/android/embracesdk/network/EmbraceNetworkRequest;
	public fun getBytesIn ()Ljava/lang/Long;
	public fun getBytesOut ()Ljava/lang/Long;
	public fun getBytesReceived ()Ljava/lang/Long;
	public fun getBytesSent ()Ljava/lang/Long;
	public fun getEndTime ()Ljava/lang/Long;
	public fun getError ()Ljava/lang/Throwable;
	public fun getErrorMessage ()Ljava/lang/String;
	public fun getErrorType ()Ljava/lang/String;
	public fun getHttpMethod ()Ljava/lang/String;
	public fun getNetworkCaptureData ()Lio/embrace/android/embracesdk/internal/network/http/NetworkCaptureData;
	public fun getResponseCode ()Ljava/lang/Integer;
	public fun getStartTime ()Ljava/lang/Long;
	public fun getTraceId ()Ljava/lang/String;
	public fun getUrl ()Ljava/lang/String;
	public fun getW3cTraceparent ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/network/http/HttpMethod : java/lang/Enum {
	public static final field CONNECT Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field DELETE Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field GET Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field HEAD Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field OPTIONS Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field PATCH Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field POST Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field PUT Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static final field TRACE Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static fun fromInt (Ljava/lang/Integer;)Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static fun fromString (Ljava/lang/String;)Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/network/http/HttpMethod;
	public static fun values ()[Lio/embrace/android/embracesdk/network/http/HttpMethod;
}

public abstract interface class io/embrace/android/embracesdk/spans/EmbraceSpan {
	public abstract fun addAttribute (Ljava/lang/String;Ljava/lang/String;)Z
	public abstract fun addEvent (Ljava/lang/String;)Z
	public abstract fun addEvent (Ljava/lang/String;Ljava/lang/Long;)Z
	public abstract fun addEvent (Ljava/lang/String;Ljava/lang/Long;Ljava/util/Map;)Z
	public abstract fun getParent ()Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public abstract fun getSpanContext ()Lio/opentelemetry/api/trace/SpanContext;
	public abstract fun getSpanId ()Ljava/lang/String;
	public abstract fun getTraceId ()Ljava/lang/String;
	public abstract fun isRecording ()Z
	public abstract fun recordException (Ljava/lang/Throwable;)Z
	public abstract fun recordException (Ljava/lang/Throwable;Ljava/util/Map;)Z
	public abstract fun start ()Z
	public abstract fun start (Ljava/lang/Long;)Z
	public abstract fun stop ()Z
	public abstract fun stop (Lio/embrace/android/embracesdk/spans/ErrorCode;)Z
	public abstract fun stop (Lio/embrace/android/embracesdk/spans/ErrorCode;Ljava/lang/Long;)Z
	public abstract fun stop (Ljava/lang/Long;)Z
	public abstract fun updateName (Ljava/lang/String;)Z
}

public final class io/embrace/android/embracesdk/spans/EmbraceSpan$DefaultImpls {
	public static fun addEvent (Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/lang/String;)Z
	public static fun addEvent (Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/lang/String;Ljava/lang/Long;)Z
	public static fun recordException (Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/lang/Throwable;)Z
	public static fun start (Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public static fun stop (Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public static fun stop (Lio/embrace/android/embracesdk/spans/EmbraceSpan;Lio/embrace/android/embracesdk/spans/ErrorCode;)Z
	public static fun stop (Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/lang/Long;)Z
}

public final class io/embrace/android/embracesdk/spans/EmbraceSpanEvent {
	public static final field Companion Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent$Companion;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()J
	public final fun component3 ()Ljava/util/Map;
	public final fun copy (Ljava/lang/String;JLjava/util/Map;)Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent;
	public static synthetic fun copy$default (Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent;Ljava/lang/String;JLjava/util/Map;ILjava/lang/Object;)Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAttributes ()Ljava/util/Map;
	public final fun getName ()Ljava/lang/String;
	public final fun getTimestampNanos ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/spans/EmbraceSpanEvent$Companion {
	public final fun create (Ljava/lang/String;JLjava/util/Map;)Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent;
}

public final class io/embrace/android/embracesdk/spans/EmbraceSpanEventJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent;
	public synthetic fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Lio/embrace/android/embracesdk/spans/EmbraceSpanEvent;)V
	public synthetic fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/embrace/android/embracesdk/spans/ErrorCode : java/lang/Enum {
	public static final field FAILURE Lio/embrace/android/embracesdk/spans/ErrorCode;
	public static final field UNKNOWN Lio/embrace/android/embracesdk/spans/ErrorCode;
	public static final field USER_ABANDON Lio/embrace/android/embracesdk/spans/ErrorCode;
	public static fun valueOf (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/ErrorCode;
	public static fun values ()[Lio/embrace/android/embracesdk/spans/ErrorCode;
}

public abstract interface class io/embrace/android/embracesdk/spans/TracingApi {
	public abstract fun createSpan (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public abstract fun createSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public abstract fun getSpan (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public abstract fun isTracingAvailable ()Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJ)Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;)Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/util/Map;Ljava/util/List;)Z
	public abstract fun recordCompletedSpan (Ljava/lang/String;JJLjava/util/Map;Ljava/util/List;)Z
	public abstract fun recordSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun recordSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun recordSpan (Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun recordSpan (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun startSpan (Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public abstract fun startSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public abstract fun startSpan (Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Ljava/lang/Long;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
}

public final class io/embrace/android/embracesdk/spans/TracingApi$DefaultImpls {
	public static fun createSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;JJ)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;JJLio/embrace/android/embracesdk/spans/ErrorCode;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Z
	public static fun recordCompletedSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;JJLjava/util/Map;Ljava/util/List;)Z
	public static fun recordSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun recordSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun recordSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun startSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
	public static fun startSpan (Lio/embrace/android/embracesdk/spans/TracingApi;Ljava/lang/String;Lio/embrace/android/embracesdk/spans/EmbraceSpan;)Lio/embrace/android/embracesdk/spans/EmbraceSpan;
}

